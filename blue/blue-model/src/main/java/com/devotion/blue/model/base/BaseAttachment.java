package com.devotion.blue.model.base;

import com.devotion.blue.message.MessageKit;
import com.devotion.blue.model.Metadata;
import com.devotion.blue.model.core.JModel;
import com.devotion.blue.model.query.MetaDataQuery;
import com.jfinal.plugin.activerecord.IBean;
import com.jfinal.plugin.ehcache.CacheKit;
import com.jfinal.plugin.ehcache.IDataLoader;

import java.math.BigInteger;

/**
 * Auto generated by JPress, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseAttachment<M extends BaseAttachment<M>> extends JModel<M> implements IBean {

    public static final String CACHE_NAME = "attachment";
    public static final String METADATA_TYPE = "attachment";

    public static final String ACTION_ADD = "attachment:add";
    public static final String ACTION_DELETE = "attachment:delete";
    public static final String ACTION_UPDATE = "attachment:update";

    public void removeCache(Object key) {
        if (key == null) return;
        CacheKit.remove(CACHE_NAME, key);
    }

    public void putCache(Object key, Object value) {
        CacheKit.put(CACHE_NAME, key, value);
    }

    public M getCache(Object key) {
        return CacheKit.get(CACHE_NAME, key);
    }

    public M getCache(Object key, IDataLoader dataloader) {
        return CacheKit.get(CACHE_NAME, key, dataloader);
    }

    public Metadata createMetadata() {
        return createMetadata(null, null);
    }

    public Metadata createMetadata(String key, String value) {
        Metadata md = new Metadata();
        md.setObjectId(getId());
        md.setObjectType(METADATA_TYPE);
        md.setMetaKey(key);
        md.setMetaValue(value);
        return md;
    }

    public boolean saveOrUpdateMetadta(String key, String value) {
        Metadata metadata = MetaDataQuery.me().findByTypeAndIdAndKey(METADATA_TYPE, getId(), key);
        if (metadata == null) {
            metadata = createMetadata(key, value);
            return metadata.save();
        }
        metadata.setMetaValue(value);
        return metadata.update();
    }

    public String metadata(String key) {
        Metadata m = MetaDataQuery.me().findByTypeAndIdAndKey(METADATA_TYPE, getId(), key);
        if (m != null) {
            return m.getMetaValue();
        }
        return null;
    }

    @Override
    public boolean equals(Object o) {
        if (o == null) {
            return false;
        }
        if (!(o instanceof BaseAttachment<?>)) {
            return false;
        }

        BaseAttachment<?> m = (BaseAttachment<?>) o;
        if (m.getId() == null) {
            return false;
        }

        return m.getId().compareTo(this.getId()) == 0;
    }

    @Override
    public boolean save() {
        boolean saved = super.save();
        if (saved) {
            MessageKit.sendMessage(ACTION_ADD, this);
        }
        return saved;
    }

    @Override
    public boolean delete() {
        boolean deleted = super.delete();
        if (deleted) {
            MessageKit.sendMessage(ACTION_DELETE, this);
        }
        return deleted;
    }

    @Override
    public boolean deleteById(Object idValue) {
        boolean deleted = super.deleteById(idValue);
        if (deleted) {
            MessageKit.sendMessage(ACTION_DELETE, this);
        }
        return deleted;
    }

    @Override
    public boolean update() {
        boolean update = super.update();
        if (update) {
            MessageKit.sendMessage(ACTION_UPDATE, this);
        }
        return update;
    }

    public void setId(java.math.BigInteger id) {
        set("id", id);
    }

    public java.math.BigInteger getId() {
        Object id = get("id");
        if (id == null)
            return null;

        return id instanceof BigInteger ? (BigInteger) id : new BigInteger(id.toString());
    }

    public void setTitle(java.lang.String title) {
        set("title", title);
    }

    public java.lang.String getTitle() {
        return get("title");
    }

    public void setUserId(java.math.BigInteger userId) {
        set("user_id", userId);
    }

    public java.math.BigInteger getUserId() {
        return get("user_id");
    }

    public void setContentId(java.math.BigInteger contentId) {
        set("content_id", contentId);
    }

    public java.math.BigInteger getContentId() {
        return get("content_id");
    }

    public void setPath(java.lang.String path) {
        set("path", path);
    }

    public java.lang.String getPath() {
        return get("path");
    }

    public void setMimeType(java.lang.String mimeType) {
        set("mime_type", mimeType);
    }

    public java.lang.String getMimeType() {
        return get("mime_type");
    }

    public void setSuffix(java.lang.String suffix) {
        set("suffix", suffix);
    }

    public java.lang.String getSuffix() {
        return get("suffix");
    }

    public void setType(java.lang.String type) {
        set("type", type);
    }

    public java.lang.String getType() {
        return get("type");
    }

    public void setFlag(java.lang.String flag) {
        set("flag", flag);
    }

    public java.lang.String getFlag() {
        return get("flag");
    }

    public void setLat(java.math.BigDecimal lat) {
        set("lat", lat);
    }

    public java.math.BigDecimal getLat() {
        return get("lat");
    }

    public void setLng(java.math.BigDecimal lng) {
        set("lng", lng);
    }

    public java.math.BigDecimal getLng() {
        return get("lng");
    }

    public void setOrderNumber(java.lang.Integer orderNumber) {
        set("order_number", orderNumber);
    }

    public java.lang.Integer getOrderNumber() {
        return get("order_number");
    }

    public void setCreated(java.util.Date created) {
        set("created", created);
    }

    public java.util.Date getCreated() {
        return get("created");
    }

}
